import Head from 'next/head'
import {useState} from "react"
import { useForm } from "react-hook-form";
import styles from '../styles/Home.module.css'
import Table from "../components/tabla/Table"
import { nanoid } from 'nanoid'
import AddForm from '../components/addForm/AddForm';
import ModalEditForm from '../components/modalEditForm/ModalEditForm';
export default function Home() {
  let data = [
    {
      "id": 1,
      "name": "Leanne Graham",
      "username": "Bret",
      "email": "Sincere@april.biz",
      "address": {
        "street": "Kulas Light",
        "suite": "Apt. 556",
        "city": "Gwenborough",
        "zipcode": "92998-3874",
        "geo": {
          "lat": "-37.3159",
          "lng": "81.1496"
        }
      },
      "phone": "1-770-736-8031 x56442",
      "website": "hildegard.org",
      "company": {
        "name": "Romaguera-Crona",
        "catchPhrase": "Multi-layered client-server neural-net",
        "bs": "harness real-time e-markets"
      }
    },
    {
      "id": 2,
      "name": "Ervin Howell",
      "username": "Antonette",
      "email": "Shanna@melissa.tv",
      "address": {
        "street": "Victor Plains",
        "suite": "Suite 879",
        "city": "Wisokyburgh",
        "zipcode": "90566-7771",
        "geo": {
          "lat": "-43.9509",
          "lng": "-34.4618"
        }
      },
      "phone": "010-692-6593 x09125",
      "website": "anastasia.net",
      "company": {
        "name": "Deckow-Crist",
        "catchPhrase": "Proactive didactic contingency",
        "bs": "synergize scalable supply-chains"
      }
    },
    {
      "id": 3,
      "name": "Clementine Bauch",
      "username": "Samantha",
      "email": "Nathan@yesenia.net",
      "address": {
        "street": "Douglas Extension",
        "suite": "Suite 847",
        "city": "McKenziehaven",
      }}
  ]
  const [display, setDisplay] = useState(data)
  const [add, setAdd] = useState(true)

  const [editContactId, setEditContactId] = useState(null);
  const [elementToEdit, setElementToEdit] = useState({});

  const { register, handleSubmit, formState: { errors }, reset } = useForm();
  const addContact = (event) => {
    const newContact = {
      id: nanoid(),
      name:event.name,
      username:event.username,
      email:event.email,
      address:{
        street:event.street,
        suite: event.suite,
        city: event.city
        }
      }
      reset({name:"",username:"",email:"",
        street:"",
        suite: "",
        city: ""
      })
    setDisplay([...display, newContact])
  }
  const editRow = (event) => {
    const newContact = {
      name:event.name,
      username:event.username,
      email:event.email,
      address:{
        street:event.street,
        suite: event.suite,
        city: event.city
        }
      }
      let newList = display.map(e => {
        if(e.id === editContactId){
          console.log({ id:e.id , ...newContact})
            return { id:e.id , ...newContact}
        }
        return e
    })
    setEditContactId(null)
    setDisplay(newList)
  }
  const handleDelete = (id) => {
    const newList = display.filter(e => e.id !== id)
    setDisplay(newList)
  }
  return (
    <div className={styles.container}>
      <Head>
        <title>GlobalTable</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {editContactId && <ModalEditForm elementToEdit={elementToEdit} editRow={editRow} setEditContactId={setEditContactId}/>}
      <div className='form__container'>
        <button className={styles.addBtn} onClick={() => setAdd(!add)}>add +</button>
        <article style={ {display: add ?  "none" : "block"}}>
          <AddForm register={register} handleSubmit={handleSubmit} errors={errors} addContact={addContact} />
        </article>
      </div>
      
      <main className={styles.main}>
        <Table data={display} setElementToEdit={setElementToEdit} setEditContactId={setEditContactId} handleDelete={handleDelete} />
      </main>

      <footer className={styles.footer}>

          Powered by{' '}
          <span className={styles.logo}>
            Global
          </span>

      </footer>
    </div>
  )
}
